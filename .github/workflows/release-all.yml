name: release-deb

on:
  push:
    tags:
    - '*'

jobs:
  release_build:
      strategy:
        matrix:
          include:
            - distro: melodic
              ubuntu: bionic
              bloom: python-bloom
            - distro: noetic
              ubuntu: focal
              bloom: python3-bloom
      runs-on: ubuntu-latest
      container:
        image: rostooling/setup-ros-docker:ubuntu-${{ matrix.ubuntu }}-ros-${{ matrix.distro }}-ros-base-latest
        #options: -u root  # setup-node requires root access
      steps:
      - uses: actions/checkout@v2
        with:
          path: '.'
      - name: Download packages
        run: |
          sudo apt update
          sudo apt install -y python3-vcstool
          vcs import --recursive --w 1 < smarc_releases.rosinstall
      - name: Setup environment
        #sudo curl https://raw.githubusercontent.com/smarc-project/rosinstall/master/sources.list.d/smarc-${{ matrix.distro }}-latest.list -o /etc/apt/sources.list.d/smarc-latest.list     
        run: |
          sudo curl https://raw.githubusercontent.com/smarc-project/rosinstall/master/rosdep/50-smarc-${{ matrix.distro }}.list -o /etc/ros/rosdep/sources.list.d/50-smarc.list  
          rosdep update
      - name: Install deps
        run: |
          ls
          sudo apt install -y ${{ matrix.bloom }} fakeroot dpkg-dev debhelper zip
      - name: Build package
        shell: bash
        run: |
          mkdir bloom-release-debs
          while read repo_line; do
            repo=$(echo $repo_line | cut -c3-)
            echo "Doing ${repo}"
            pkgs_file="${repo}/release_packages.yaml"
            has_config=$(test -f "$pkgs_file")
            if $has_config; then
              echo "Found ${pkgs_file}"
              pkgs=()
              while read line; do
                echo $line
                pkgs+=($(echo $line | cut -c3-))
              done < $pkgs_file
              cd $repo
            else
              echo "Didn't find ${pkgs_file}!"
              pkgs=("${repo}")
            fi
            echo ${pkgs[*]}
            for pkg in ${pkgs[*]}; do
              echo "Doing ${pkg}"
              cd $pkg
              ls
              rosdep install --from-path . --ignore-src --rosdistro ${{ matrix.distro }} -y
              bloom-generate rosdebian --os-name ubuntu --os-version ${{ matrix.ubuntu }} --ros-distro ${{ matrix.distro }}
              fakeroot debian/rules binary
              cd ..
              sudo dpkg -i ros-${{ matrix.distro }}-*.deb
              if $has_config; then
                mv ros-${{ matrix.distro }}-*.deb ../bloom-release-debs
              else
                mv ros-${{ matrix.distro }}-*.deb bloom-release-debs
              fi
            done
            if $has_config; then
              cd ..
            fi
          done < release_repos.yaml
          zip -j bloom-${{ matrix.distro }}-release-deb.zip bloom-release-debs/*
          ls
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./bloom-${{ matrix.distro }}-release-deb.zip
          asset_name: bloom-${{ matrix.distro }}-release-deb.zip
          tag: ${{ github.ref }}
          overwrite: true
          body: "Debian release generated using bloom"

